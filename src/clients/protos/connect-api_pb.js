// source: connect-api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.connect_api.ActionConnectRequest', null, global);
goog.exportSymbol('proto.connect_api.ActionConnectResponse', null, global);
goog.exportSymbol('proto.connect_api.GeneralConnectRequest', null, global);
goog.exportSymbol('proto.connect_api.GeneralConnectResponse', null, global);
goog.exportSymbol('proto.connect_api.GetConnectorFilesRequest', null, global);
goog.exportSymbol('proto.connect_api.GetConnectorFilesResponse', null, global);
goog.exportSymbol('proto.connect_api.KnowledgeConnectRequest', null, global);
goog.exportSymbol('proto.connect_api.KnowledgeConnectResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.KnowledgeConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.KnowledgeConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.KnowledgeConnectRequest.displayName = 'proto.connect_api.KnowledgeConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.KnowledgeConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.KnowledgeConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.KnowledgeConnectResponse.displayName = 'proto.connect_api.KnowledgeConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.GeneralConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.GeneralConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.GeneralConnectRequest.displayName = 'proto.connect_api.GeneralConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.GeneralConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.GeneralConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.GeneralConnectResponse.displayName = 'proto.connect_api.GeneralConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.ActionConnectRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.ActionConnectRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.ActionConnectRequest.displayName = 'proto.connect_api.ActionConnectRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.ActionConnectResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.connect_api.ActionConnectResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.ActionConnectResponse.displayName = 'proto.connect_api.ActionConnectResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.GetConnectorFilesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.connect_api.GetConnectorFilesRequest.repeatedFields_, null);
};
goog.inherits(proto.connect_api.GetConnectorFilesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.GetConnectorFilesRequest.displayName = 'proto.connect_api.GetConnectorFilesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.connect_api.GetConnectorFilesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.connect_api.GetConnectorFilesResponse.repeatedFields_, null);
};
goog.inherits(proto.connect_api.GetConnectorFilesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.connect_api.GetConnectorFilesResponse.displayName = 'proto.connect_api.GetConnectorFilesResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.KnowledgeConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.KnowledgeConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.KnowledgeConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connect: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.KnowledgeConnectRequest}
 */
proto.connect_api.KnowledgeConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.KnowledgeConnectRequest;
  return proto.connect_api.KnowledgeConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.KnowledgeConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.KnowledgeConnectRequest}
 */
proto.connect_api.KnowledgeConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.KnowledgeConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.KnowledgeConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.KnowledgeConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnect();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectRequest} returns this
 */
proto.connect_api.KnowledgeConnectRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectRequest} returns this
 */
proto.connect_api.KnowledgeConnectRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectRequest} returns this
 */
proto.connect_api.KnowledgeConnectRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string connect = 4;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectRequest.prototype.getConnect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectRequest} returns this
 */
proto.connect_api.KnowledgeConnectRequest.prototype.setConnect = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.KnowledgeConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.KnowledgeConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.KnowledgeConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    toolid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    redirectto: jspb.Message.getFieldWithDefault(msg, 4, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.KnowledgeConnectResponse}
 */
proto.connect_api.KnowledgeConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.KnowledgeConnectResponse;
  return proto.connect_api.KnowledgeConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.KnowledgeConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.KnowledgeConnectResponse}
 */
proto.connect_api.KnowledgeConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setToolid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectto(value);
      break;
    case 5:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.KnowledgeConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.KnowledgeConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.KnowledgeConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getToolid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getRedirectto();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
 */
proto.connect_api.KnowledgeConnectResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
 */
proto.connect_api.KnowledgeConnectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint64 toolId = 3;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.getToolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
 */
proto.connect_api.KnowledgeConnectResponse.prototype.setToolid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string redirectTo = 4;
 * @return {string}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.getRedirectto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
 */
proto.connect_api.KnowledgeConnectResponse.prototype.setRedirectto = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Error error = 5;
 * @return {?proto.Error}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 5));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
*/
proto.connect_api.KnowledgeConnectResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.KnowledgeConnectResponse} returns this
 */
proto.connect_api.KnowledgeConnectResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.KnowledgeConnectResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.GeneralConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.GeneralConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.GeneralConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GeneralConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connect: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.GeneralConnectRequest}
 */
proto.connect_api.GeneralConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.GeneralConnectRequest;
  return proto.connect_api.GeneralConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.GeneralConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.GeneralConnectRequest}
 */
proto.connect_api.GeneralConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.GeneralConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.GeneralConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.GeneralConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GeneralConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnect();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.connect_api.GeneralConnectRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectRequest} returns this
 */
proto.connect_api.GeneralConnectRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.connect_api.GeneralConnectRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectRequest} returns this
 */
proto.connect_api.GeneralConnectRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.connect_api.GeneralConnectRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectRequest} returns this
 */
proto.connect_api.GeneralConnectRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string connect = 4;
 * @return {string}
 */
proto.connect_api.GeneralConnectRequest.prototype.getConnect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectRequest} returns this
 */
proto.connect_api.GeneralConnectRequest.prototype.setConnect = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.GeneralConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.GeneralConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.GeneralConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GeneralConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    toolid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    redirectto: jspb.Message.getFieldWithDefault(msg, 4, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.GeneralConnectResponse}
 */
proto.connect_api.GeneralConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.GeneralConnectResponse;
  return proto.connect_api.GeneralConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.GeneralConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.GeneralConnectResponse}
 */
proto.connect_api.GeneralConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setToolid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectto(value);
      break;
    case 5:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.GeneralConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.GeneralConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.GeneralConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GeneralConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getToolid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getRedirectto();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.connect_api.GeneralConnectResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
 */
proto.connect_api.GeneralConnectResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.connect_api.GeneralConnectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
 */
proto.connect_api.GeneralConnectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint64 toolId = 3;
 * @return {string}
 */
proto.connect_api.GeneralConnectResponse.prototype.getToolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
 */
proto.connect_api.GeneralConnectResponse.prototype.setToolid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string redirectTo = 4;
 * @return {string}
 */
proto.connect_api.GeneralConnectResponse.prototype.getRedirectto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
 */
proto.connect_api.GeneralConnectResponse.prototype.setRedirectto = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Error error = 5;
 * @return {?proto.Error}
 */
proto.connect_api.GeneralConnectResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 5));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
*/
proto.connect_api.GeneralConnectResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.GeneralConnectResponse} returns this
 */
proto.connect_api.GeneralConnectResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.GeneralConnectResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.ActionConnectRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.ActionConnectRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.ActionConnectRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.ActionConnectRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, ""),
    scope: jspb.Message.getFieldWithDefault(msg, 3, ""),
    connect: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.ActionConnectRequest}
 */
proto.connect_api.ActionConnectRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.ActionConnectRequest;
  return proto.connect_api.ActionConnectRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.ActionConnectRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.ActionConnectRequest}
 */
proto.connect_api.ActionConnectRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScope(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.ActionConnectRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.ActionConnectRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.ActionConnectRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.ActionConnectRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getScope();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConnect();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string state = 1;
 * @return {string}
 */
proto.connect_api.ActionConnectRequest.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectRequest} returns this
 */
proto.connect_api.ActionConnectRequest.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.connect_api.ActionConnectRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectRequest} returns this
 */
proto.connect_api.ActionConnectRequest.prototype.setCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string scope = 3;
 * @return {string}
 */
proto.connect_api.ActionConnectRequest.prototype.getScope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectRequest} returns this
 */
proto.connect_api.ActionConnectRequest.prototype.setScope = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string connect = 4;
 * @return {string}
 */
proto.connect_api.ActionConnectRequest.prototype.getConnect = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectRequest} returns this
 */
proto.connect_api.ActionConnectRequest.prototype.setConnect = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.ActionConnectResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.ActionConnectResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.ActionConnectResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.ActionConnectResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    toolid: jspb.Message.getFieldWithDefault(msg, 3, "0"),
    redirectto: jspb.Message.getFieldWithDefault(msg, 4, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.ActionConnectResponse}
 */
proto.connect_api.ActionConnectResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.ActionConnectResponse;
  return proto.connect_api.ActionConnectResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.ActionConnectResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.ActionConnectResponse}
 */
proto.connect_api.ActionConnectResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setToolid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRedirectto(value);
      break;
    case 5:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.ActionConnectResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.ActionConnectResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.ActionConnectResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.ActionConnectResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getToolid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
  f = message.getRedirectto();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.connect_api.ActionConnectResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.connect_api.ActionConnectResponse} returns this
 */
proto.connect_api.ActionConnectResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.connect_api.ActionConnectResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.connect_api.ActionConnectResponse} returns this
 */
proto.connect_api.ActionConnectResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional uint64 toolId = 3;
 * @return {string}
 */
proto.connect_api.ActionConnectResponse.prototype.getToolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectResponse} returns this
 */
proto.connect_api.ActionConnectResponse.prototype.setToolid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};


/**
 * optional string redirectTo = 4;
 * @return {string}
 */
proto.connect_api.ActionConnectResponse.prototype.getRedirectto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.ActionConnectResponse} returns this
 */
proto.connect_api.ActionConnectResponse.prototype.setRedirectto = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Error error = 5;
 * @return {?proto.Error}
 */
proto.connect_api.ActionConnectResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 5));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.connect_api.ActionConnectResponse} returns this
*/
proto.connect_api.ActionConnectResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.ActionConnectResponse} returns this
 */
proto.connect_api.ActionConnectResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.ActionConnectResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.connect_api.GetConnectorFilesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.GetConnectorFilesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.GetConnectorFilesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GetConnectorFilesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paginate: (f = msg.getPaginate()) && common_pb.Paginate.toObject(includeInstance, f),
    criteriasList: jspb.Message.toObjectList(msg.getCriteriasList(),
    common_pb.Criteria.toObject, includeInstance),
    toolid: jspb.Message.getFieldWithDefault(msg, 3, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.GetConnectorFilesRequest}
 */
proto.connect_api.GetConnectorFilesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.GetConnectorFilesRequest;
  return proto.connect_api.GetConnectorFilesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.GetConnectorFilesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.GetConnectorFilesRequest}
 */
proto.connect_api.GetConnectorFilesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Paginate;
      reader.readMessage(value,common_pb.Paginate.deserializeBinaryFromReader);
      msg.setPaginate(value);
      break;
    case 2:
      var value = new common_pb.Criteria;
      reader.readMessage(value,common_pb.Criteria.deserializeBinaryFromReader);
      msg.addCriterias(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setToolid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.GetConnectorFilesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.GetConnectorFilesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GetConnectorFilesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaginate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Paginate.serializeBinaryToWriter
    );
  }
  f = message.getCriteriasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.Criteria.serializeBinaryToWriter
    );
  }
  f = message.getToolid();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      3,
      f
    );
  }
};


/**
 * optional Paginate paginate = 1;
 * @return {?proto.Paginate}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.getPaginate = function() {
  return /** @type{?proto.Paginate} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginate, 1));
};


/**
 * @param {?proto.Paginate|undefined} value
 * @return {!proto.connect_api.GetConnectorFilesRequest} returns this
*/
proto.connect_api.GetConnectorFilesRequest.prototype.setPaginate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.GetConnectorFilesRequest} returns this
 */
proto.connect_api.GetConnectorFilesRequest.prototype.clearPaginate = function() {
  return this.setPaginate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.hasPaginate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Criteria criterias = 2;
 * @return {!Array<!proto.Criteria>}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.getCriteriasList = function() {
  return /** @type{!Array<!proto.Criteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Criteria, 2));
};


/**
 * @param {!Array<!proto.Criteria>} value
 * @return {!proto.connect_api.GetConnectorFilesRequest} returns this
*/
proto.connect_api.GetConnectorFilesRequest.prototype.setCriteriasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Criteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Criteria}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.addCriterias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Criteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.connect_api.GetConnectorFilesRequest} returns this
 */
proto.connect_api.GetConnectorFilesRequest.prototype.clearCriteriasList = function() {
  return this.setCriteriasList([]);
};


/**
 * optional uint64 toolId = 3;
 * @return {string}
 */
proto.connect_api.GetConnectorFilesRequest.prototype.getToolid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, "0"));
};


/**
 * @param {string} value
 * @return {!proto.connect_api.GetConnectorFilesRequest} returns this
 */
proto.connect_api.GetConnectorFilesRequest.prototype.setToolid = function(value) {
  return jspb.Message.setProto3StringIntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.connect_api.GetConnectorFilesResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.connect_api.GetConnectorFilesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.connect_api.GetConnectorFilesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GetConnectorFilesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    google_protobuf_struct_pb.Struct.toObject, includeInstance),
    paginated: (f = msg.getPaginated()) && common_pb.Paginated.toObject(includeInstance, f),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    argsMap: (f = msg.getArgsMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.connect_api.GetConnectorFilesResponse}
 */
proto.connect_api.GetConnectorFilesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.connect_api.GetConnectorFilesResponse;
  return proto.connect_api.GetConnectorFilesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.connect_api.GetConnectorFilesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.connect_api.GetConnectorFilesResponse}
 */
proto.connect_api.GetConnectorFilesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new google_protobuf_struct_pb.Struct;
      reader.readMessage(value,google_protobuf_struct_pb.Struct.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 4:
      var value = new common_pb.Paginated;
      reader.readMessage(value,common_pb.Paginated.deserializeBinaryFromReader);
      msg.setPaginated(value);
      break;
    case 5:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 6:
      var value = msg.getArgsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.connect_api.GetConnectorFilesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.connect_api.GetConnectorFilesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.connect_api.GetConnectorFilesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      google_protobuf_struct_pb.Struct.serializeBinaryToWriter
    );
  }
  f = message.getPaginated();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Paginated.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getArgsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated google.protobuf.Struct data = 3;
 * @return {!Array<!proto.google.protobuf.Struct>}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.google.protobuf.Struct>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_protobuf_struct_pb.Struct, 3));
};


/**
 * @param {!Array<!proto.google.protobuf.Struct>} value
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
*/
proto.connect_api.GetConnectorFilesResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.protobuf.Struct=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.protobuf.Struct}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.protobuf.Struct, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional Paginated paginated = 4;
 * @return {?proto.Paginated}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getPaginated = function() {
  return /** @type{?proto.Paginated} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginated, 4));
};


/**
 * @param {?proto.Paginated|undefined} value
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
*/
proto.connect_api.GetConnectorFilesResponse.prototype.setPaginated = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.clearPaginated = function() {
  return this.setPaginated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.hasPaginated = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Error error = 5;
 * @return {?proto.Error}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 5));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
*/
proto.connect_api.GetConnectorFilesResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * map<string, string> args = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.connect_api.GetConnectorFilesResponse.prototype.getArgsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.connect_api.GetConnectorFilesResponse} returns this
 */
proto.connect_api.GetConnectorFilesResponse.prototype.clearArgsMap = function() {
  this.getArgsMap().clear();
  return this;};


goog.object.extend(exports, proto.connect_api);
