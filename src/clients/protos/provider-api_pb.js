// source: provider-api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.provider_api.GetAllModelProviderRequest', null, global);
goog.exportSymbol('proto.provider_api.GetAllModelProviderResponse', null, global);
goog.exportSymbol('proto.provider_api.GetAllToolProviderRequest', null, global);
goog.exportSymbol('proto.provider_api.GetAllToolProviderResponse', null, global);
goog.exportSymbol('proto.provider_api.ToolProvider', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provider_api.GetAllModelProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provider_api.GetAllModelProviderRequest.repeatedFields_, null);
};
goog.inherits(proto.provider_api.GetAllModelProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provider_api.GetAllModelProviderRequest.displayName = 'proto.provider_api.GetAllModelProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provider_api.GetAllModelProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provider_api.GetAllModelProviderResponse.repeatedFields_, null);
};
goog.inherits(proto.provider_api.GetAllModelProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provider_api.GetAllModelProviderResponse.displayName = 'proto.provider_api.GetAllModelProviderResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provider_api.ToolProvider = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provider_api.ToolProvider.repeatedFields_, null);
};
goog.inherits(proto.provider_api.ToolProvider, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provider_api.ToolProvider.displayName = 'proto.provider_api.ToolProvider';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provider_api.GetAllToolProviderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provider_api.GetAllToolProviderRequest.repeatedFields_, null);
};
goog.inherits(proto.provider_api.GetAllToolProviderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provider_api.GetAllToolProviderRequest.displayName = 'proto.provider_api.GetAllToolProviderRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.provider_api.GetAllToolProviderResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.provider_api.GetAllToolProviderResponse.repeatedFields_, null);
};
goog.inherits(proto.provider_api.GetAllToolProviderResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.provider_api.GetAllToolProviderResponse.displayName = 'proto.provider_api.GetAllToolProviderResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provider_api.GetAllModelProviderRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provider_api.GetAllModelProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provider_api.GetAllModelProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllModelProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paginate: (f = msg.getPaginate()) && common_pb.Paginate.toObject(includeInstance, f),
    criteriasList: jspb.Message.toObjectList(msg.getCriteriasList(),
    common_pb.Criteria.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provider_api.GetAllModelProviderRequest}
 */
proto.provider_api.GetAllModelProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provider_api.GetAllModelProviderRequest;
  return proto.provider_api.GetAllModelProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provider_api.GetAllModelProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provider_api.GetAllModelProviderRequest}
 */
proto.provider_api.GetAllModelProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Paginate;
      reader.readMessage(value,common_pb.Paginate.deserializeBinaryFromReader);
      msg.setPaginate(value);
      break;
    case 2:
      var value = new common_pb.Criteria;
      reader.readMessage(value,common_pb.Criteria.deserializeBinaryFromReader);
      msg.addCriterias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provider_api.GetAllModelProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provider_api.GetAllModelProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllModelProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaginate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Paginate.serializeBinaryToWriter
    );
  }
  f = message.getCriteriasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.Criteria.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paginate paginate = 1;
 * @return {?proto.Paginate}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.getPaginate = function() {
  return /** @type{?proto.Paginate} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginate, 1));
};


/**
 * @param {?proto.Paginate|undefined} value
 * @return {!proto.provider_api.GetAllModelProviderRequest} returns this
*/
proto.provider_api.GetAllModelProviderRequest.prototype.setPaginate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provider_api.GetAllModelProviderRequest} returns this
 */
proto.provider_api.GetAllModelProviderRequest.prototype.clearPaginate = function() {
  return this.setPaginate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.hasPaginate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Criteria criterias = 2;
 * @return {!Array<!proto.Criteria>}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.getCriteriasList = function() {
  return /** @type{!Array<!proto.Criteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Criteria, 2));
};


/**
 * @param {!Array<!proto.Criteria>} value
 * @return {!proto.provider_api.GetAllModelProviderRequest} returns this
*/
proto.provider_api.GetAllModelProviderRequest.prototype.setCriteriasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Criteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Criteria}
 */
proto.provider_api.GetAllModelProviderRequest.prototype.addCriterias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Criteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provider_api.GetAllModelProviderRequest} returns this
 */
proto.provider_api.GetAllModelProviderRequest.prototype.clearCriteriasList = function() {
  return this.setCriteriasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provider_api.GetAllModelProviderResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provider_api.GetAllModelProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provider_api.GetAllModelProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllModelProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    common_pb.Provider.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provider_api.GetAllModelProviderResponse}
 */
proto.provider_api.GetAllModelProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provider_api.GetAllModelProviderResponse;
  return proto.provider_api.GetAllModelProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provider_api.GetAllModelProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provider_api.GetAllModelProviderResponse}
 */
proto.provider_api.GetAllModelProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new common_pb.Provider;
      reader.readMessage(value,common_pb.Provider.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provider_api.GetAllModelProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provider_api.GetAllModelProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllModelProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      common_pb.Provider.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.provider_api.GetAllModelProviderResponse} returns this
 */
proto.provider_api.GetAllModelProviderResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.provider_api.GetAllModelProviderResponse} returns this
 */
proto.provider_api.GetAllModelProviderResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Provider data = 3;
 * @return {!Array<!proto.Provider>}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.Provider>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Provider, 3));
};


/**
 * @param {!Array<!proto.Provider>} value
 * @return {!proto.provider_api.GetAllModelProviderResponse} returns this
*/
proto.provider_api.GetAllModelProviderResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.Provider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Provider}
 */
proto.provider_api.GetAllModelProviderResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.Provider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provider_api.GetAllModelProviderResponse} returns this
 */
proto.provider_api.GetAllModelProviderResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provider_api.ToolProvider.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provider_api.ToolProvider.prototype.toObject = function(opt_includeInstance) {
  return proto.provider_api.ToolProvider.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provider_api.ToolProvider} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.ToolProvider.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "0"),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    image: jspb.Message.getFieldWithDefault(msg, 4, ""),
    featureList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f,
    connectconfigurationMap: (f = msg.getConnectconfigurationMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provider_api.ToolProvider}
 */
proto.provider_api.ToolProvider.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provider_api.ToolProvider;
  return proto.provider_api.ToolProvider.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provider_api.ToolProvider} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provider_api.ToolProvider}
 */
proto.provider_api.ToolProvider.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readUint64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addFeature(value);
      break;
    case 6:
      var value = msg.getConnectconfigurationMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provider_api.ToolProvider.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provider_api.ToolProvider.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provider_api.ToolProvider} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.ToolProvider.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeUint64String(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFeatureList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
  f = message.getConnectconfigurationMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional uint64 id = 1;
 * @return {string}
 */
proto.provider_api.ToolProvider.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, "0"));
};


/**
 * @param {string} value
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.setId = function(value) {
  return jspb.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.provider_api.ToolProvider.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.provider_api.ToolProvider.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image = 4;
 * @return {string}
 */
proto.provider_api.ToolProvider.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string feature = 5;
 * @return {!Array<string>}
 */
proto.provider_api.ToolProvider.prototype.getFeatureList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.setFeatureList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.addFeature = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.clearFeatureList = function() {
  return this.setFeatureList([]);
};


/**
 * map<string, string> connectConfiguration = 6;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.provider_api.ToolProvider.prototype.getConnectconfigurationMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 6, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.provider_api.ToolProvider} returns this
 */
proto.provider_api.ToolProvider.prototype.clearConnectconfigurationMap = function() {
  this.getConnectconfigurationMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provider_api.GetAllToolProviderRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.provider_api.GetAllToolProviderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provider_api.GetAllToolProviderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllToolProviderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    paginate: (f = msg.getPaginate()) && common_pb.Paginate.toObject(includeInstance, f),
    criteriasList: jspb.Message.toObjectList(msg.getCriteriasList(),
    common_pb.Criteria.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provider_api.GetAllToolProviderRequest}
 */
proto.provider_api.GetAllToolProviderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provider_api.GetAllToolProviderRequest;
  return proto.provider_api.GetAllToolProviderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provider_api.GetAllToolProviderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provider_api.GetAllToolProviderRequest}
 */
proto.provider_api.GetAllToolProviderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.Paginate;
      reader.readMessage(value,common_pb.Paginate.deserializeBinaryFromReader);
      msg.setPaginate(value);
      break;
    case 2:
      var value = new common_pb.Criteria;
      reader.readMessage(value,common_pb.Criteria.deserializeBinaryFromReader);
      msg.addCriterias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provider_api.GetAllToolProviderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provider_api.GetAllToolProviderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllToolProviderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaginate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.Paginate.serializeBinaryToWriter
    );
  }
  f = message.getCriteriasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      common_pb.Criteria.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paginate paginate = 1;
 * @return {?proto.Paginate}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.getPaginate = function() {
  return /** @type{?proto.Paginate} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginate, 1));
};


/**
 * @param {?proto.Paginate|undefined} value
 * @return {!proto.provider_api.GetAllToolProviderRequest} returns this
*/
proto.provider_api.GetAllToolProviderRequest.prototype.setPaginate = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provider_api.GetAllToolProviderRequest} returns this
 */
proto.provider_api.GetAllToolProviderRequest.prototype.clearPaginate = function() {
  return this.setPaginate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.hasPaginate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Criteria criterias = 2;
 * @return {!Array<!proto.Criteria>}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.getCriteriasList = function() {
  return /** @type{!Array<!proto.Criteria>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Criteria, 2));
};


/**
 * @param {!Array<!proto.Criteria>} value
 * @return {!proto.provider_api.GetAllToolProviderRequest} returns this
*/
proto.provider_api.GetAllToolProviderRequest.prototype.setCriteriasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.Criteria=} opt_value
 * @param {number=} opt_index
 * @return {!proto.Criteria}
 */
proto.provider_api.GetAllToolProviderRequest.prototype.addCriterias = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.Criteria, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provider_api.GetAllToolProviderRequest} returns this
 */
proto.provider_api.GetAllToolProviderRequest.prototype.clearCriteriasList = function() {
  return this.setCriteriasList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.provider_api.GetAllToolProviderResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.provider_api.GetAllToolProviderResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.provider_api.GetAllToolProviderResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllToolProviderResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, 0),
    success: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.provider_api.ToolProvider.toObject, includeInstance),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    paginated: (f = msg.getPaginated()) && common_pb.Paginated.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.provider_api.GetAllToolProviderResponse}
 */
proto.provider_api.GetAllToolProviderResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.provider_api.GetAllToolProviderResponse;
  return proto.provider_api.GetAllToolProviderResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.provider_api.GetAllToolProviderResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.provider_api.GetAllToolProviderResponse}
 */
proto.provider_api.GetAllToolProviderResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    case 3:
      var value = new proto.provider_api.ToolProvider;
      reader.readMessage(value,proto.provider_api.ToolProvider.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 4:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 5:
      var value = new common_pb.Paginated;
      reader.readMessage(value,common_pb.Paginated.deserializeBinaryFromReader);
      msg.setPaginated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.provider_api.GetAllToolProviderResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.provider_api.GetAllToolProviderResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.provider_api.GetAllToolProviderResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.provider_api.ToolProvider.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getPaginated();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.Paginated.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 code = 1;
 * @return {number}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
 */
proto.provider_api.GetAllToolProviderResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool success = 2;
 * @return {boolean}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
 */
proto.provider_api.GetAllToolProviderResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated ToolProvider data = 3;
 * @return {!Array<!proto.provider_api.ToolProvider>}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.provider_api.ToolProvider>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.provider_api.ToolProvider, 3));
};


/**
 * @param {!Array<!proto.provider_api.ToolProvider>} value
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
*/
proto.provider_api.GetAllToolProviderResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.provider_api.ToolProvider=} opt_value
 * @param {number=} opt_index
 * @return {!proto.provider_api.ToolProvider}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.provider_api.ToolProvider, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
 */
proto.provider_api.GetAllToolProviderResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional Error error = 4;
 * @return {?proto.Error}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.getError = function() {
  return /** @type{?proto.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 4));
};


/**
 * @param {?proto.Error|undefined} value
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
*/
proto.provider_api.GetAllToolProviderResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
 */
proto.provider_api.GetAllToolProviderResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Paginated paginated = 5;
 * @return {?proto.Paginated}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.getPaginated = function() {
  return /** @type{?proto.Paginated} */ (
    jspb.Message.getWrapperField(this, common_pb.Paginated, 5));
};


/**
 * @param {?proto.Paginated|undefined} value
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
*/
proto.provider_api.GetAllToolProviderResponse.prototype.setPaginated = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.provider_api.GetAllToolProviderResponse} returns this
 */
proto.provider_api.GetAllToolProviderResponse.prototype.clearPaginated = function() {
  return this.setPaginated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.provider_api.GetAllToolProviderResponse.prototype.hasPaginated = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.provider_api);
