name: Build and Publish React Package

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: |
          npm ci
          npm install -g postcss-cli

      - name: Build the package
        run: npm run build

      - name: Publish to npm
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish

  tag:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set Git committer identity
        run: |
          git config --global user.email "p_srivastav@outlook.com"
          git config --global user.name "Prashant Srivastav"

  create_release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get version and create tag
        id: version
        run: |
          VERSION="0.1.$(date +%Y%m%d)-$(git rev-parse --short HEAD)"
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "TAG_NAME=v${VERSION}" >> $GITHUB_OUTPUT
          if git tag -l "v${VERSION}" | grep -q "v${VERSION}"; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
          fi
      - name: Create and push tag
        if: steps.version.outputs.TAG_EXISTS == 'false'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "${{ steps.version.outputs.TAG_NAME }}" -m "Release ${{ steps.version.outputs.TAG_NAME }}"
          git push origin "${{ steps.version.outputs.TAG_NAME }}"
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "# Release ${{ steps.version.outputs.TAG_NAME }}" > release-notes.md
          echo "" >> release-notes.md
          echo "## Changes" >> release-notes.md
          echo "- Automated release from commit $(git rev-parse --short HEAD)" >> release-notes.md
          gh release create "${{ steps.version.outputs.TAG_NAME }}" \
            --title "Release ${{ steps.version.outputs.TAG_NAME }}" \
            --notes-file release-notes.md
